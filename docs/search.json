[
  {
    "objectID": "labelsig.html#adding-stars-to-plots",
    "href": "labelsig.html#adding-stars-to-plots",
    "title": "9  Labeling Significance",
    "section": "9.1 Adding stars to plots",
    "text": "9.1 Adding stars to plots\n\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "labelsig.html#adding-p-values-to-plots",
    "href": "labelsig.html#adding-p-values-to-plots",
    "title": "9  Labeling Significance",
    "section": "9.2 Adding p-values to plots",
    "text": "9.2 Adding p-values to plots"
  },
  {
    "objectID": "labelsig.html#adding-tukeys-significance-letters",
    "href": "labelsig.html#adding-tukeys-significance-letters",
    "title": "9  Labeling Significance",
    "section": "9.3 Adding Tukey’s Significance Letters",
    "text": "9.3 Adding Tukey’s Significance Letters\nOne-Way ANOVA example\nLet’s create some random data. We’ll make a dataframe of six groups.\n\nset.seed(10)\ndf <- data.frame(\n  value = c(rnorm(n = 10, mean = 10, sd = 1.8),\n            rnorm(n = 12, mean = 11, sd = 1.0),\n            rnorm(n = 14, mean = 13, sd = 1.1),\n            rnorm(n = 16, mean = 15, sd = 1.2),\n            rnorm(n = 12, mean = 14, sd = 2.2),\n            rnorm(n = 10, mean = 10, sd = 1.0)),\n  categ = c(rep(\"A\",10), rep(\"B\",12), rep(\"C\",14), \n          rep(\"D\",16), rep(\"E\",12), rep(\"F\",10)\n          )\n)\n\nhead(df)\n\n      value categ\n1 10.033743     A\n2  9.668345     A\n3  7.531605     A\n4  8.921498     A\n5 10.530181     A\n6 10.701630     A\n\n\nWe can plot the basic boxplot of these data like this:\n\nggplot(df, aes(x=categ, y=value)) +\n  geom_boxplot() +\n  theme_classic()\n\n\n\n\nTo compare significance differences between groups, we could run Tukey post-hoc tests using Honestly Signficant Differences. This is done using the TukeyHSD() function in base R, but using the HSD.test() function from the agricolae R package, we can get the letter notation we need directly.\nThis code runs the post hoc test and the groups part of it gives us the letter notations we need:\n\nlibrary(agricolae)\n\nhsd <- HSD.test(aov(value ~ categ, data=df), \"categ\", group=T)\nhsd\n\n$statistics\n   MSerror Df     Mean       CV\n  1.624327 68 12.19191 10.45357\n\n$parameters\n   test name.t ntr StudentizedRange alpha\n  Tukey  categ   6         4.147238  0.05\n\n$means\n      value       std  r       Min      Max       Q25       Q50       Q75\nA  9.116818 1.2598083 10  7.071989 10.70163  8.099472  9.441861  9.942394\nB 11.076193 0.9758832 12  8.814713 12.10178 10.672247 11.286163 11.798216\nC 12.218867 0.9310972 14 10.669033 14.06542 11.513617 12.250668 12.846258\nD 14.710048 0.8877416 16 12.889096 16.30386 14.161383 14.604540 15.317899\nE 14.346442 2.2162032 12 11.277292 18.70309 12.477597 14.694213 15.311768\nF  9.953696 0.9761422 10  8.569573 11.21613  9.093364 10.081209 10.692454\n\n$comparison\nNULL\n\n$groups\n      value groups\nD 14.710048      a\nE 14.346442      a\nC 12.218867      b\nB 11.076193     bc\nF  9.953696     cd\nA  9.116818      d\n\nattr(,\"class\")\n[1] \"group\"\n\n\nTo add these letters on to the plot, we need to decide where to put them. The x coordinate will be the mid point of each category (which can just be the name of the group), and the y coordinate will be above the maximum value of that group. But note that the groups in the summary output are reorganized from highest median value to lowest. I find it easiest to add these to our summary output in the appropriate order.\n\ndf.sum <- df %>% \n  group_by(categ) %>% \n  summarize(maxval = max(value), \n            med = median(value),\n            uq = quantile(value, .75)) %>% \n  arrange(-med)\n\ndf.sum$letters <- hsd$groups$groups\n\ndf.sum\n\n# A tibble: 6 x 5\n  categ maxval   med    uq letters\n  <chr>  <dbl> <dbl> <dbl> <chr>  \n1 E       18.7 14.7  15.3  a      \n2 D       16.3 14.6  15.3  a      \n3 C       14.1 12.3  12.8  b      \n4 B       12.1 11.3  11.8  bc     \n5 F       11.2 10.1  10.7  cd     \n6 A       10.7  9.44  9.94 d      \n\n\nThis code plots the letters above the boxplots at a y coordinate 0.2 higher than the max value.\n\nggplot(df,aes(x=categ,y=value))+\n  geom_boxplot()+\n  geom_text(data=df.sum,\n            aes(x=categ,y=0.2+maxval,\n                label=letters)) +\n  theme_classic() +\n  xlab(\"Category\")\n\n\n\n\nWe should reorder the plot though to make it more readable:\n\nggplot(df,aes(x=reorder(categ,-value,median),y=value))+\n  geom_boxplot()+\n  geom_text(data=df.sum,\n            aes(x=categ,y=0.2+maxval,\n                label=letters)) +\n  theme_classic() +\n  xlab(\"Category\")\n\n\n\n\nWe can nudge the letters up a bit using vjust=0:\n\nggplot(df,aes(x=reorder(categ,-value,median),y=value))+\n  geom_boxplot()+\n  geom_text(data=df.sum,\n            aes(x=categ,y=0.2+maxval,\n                label=letters), vjust=0) +\n  theme_classic() +\n  xlab(\"Category\")\n\n\n\n\nAlternatively, you may wish to plot the letters to the side of the upper quartile. I don’t like this very much, but it’s an option. I also make the letters bold in this example using fontface=\"bold\".\n\nggplot(df,aes(x=reorder(categ,-value,median),y=value))+\n  geom_boxplot()+\n  geom_text(data=df.sum,\n            aes(x=categ,y=uq,\n                label=letters,\n                hjust = -1, \n                vjust = -0.8, \n                fontface = \"bold\"), vjust=0) +\n  theme_classic() +\n  xlab(\"Category\")\n\n\n\n\nJust for fun, here I’m including aes(fill = factor(..middle..))) and scale_fill_brewer(palette = \"Reds\") to make the colors of the boxplots a shade of red that is equivalent to their categorical position.\n\nggplot(df,aes(x=reorder(categ,-value,median),y=value))+\n  geom_boxplot(aes(fill = factor(..middle..)))+\n  geom_text(data=df.sum,\n            aes(x=categ,y=0.2+maxval,\n                label=letters), vjust=0) +\n  theme_classic() +\n  xlab(\"Category\") +\n  scale_fill_brewer(palette = \"Reds\") +\n  theme(legend.position = 'none')\n\n\n\n\nThis approach using geom_text() to add letters to a plot can be modified for any statistical test."
  }
]